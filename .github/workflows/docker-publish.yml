name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # push:
  #   #branches: [ "main" ]
  #   # Publish semver tags as releases.
  #   tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      UBUNTU_VERSION:
        description: 'Ubuntu version, e.g.: 22.04'
        required: true
        type: string
        default: '22.04'
      IDRIS2_TAG:
        description: 'Idris2 version (tag), e.g.: v0.6.0'
        required: true
        type: string
        default: 'v0.6.0'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  UBUNTU_VERSION: ${{ inputs.UBUNTU_VERSION }}
  IDRIS2_TAG: ${{ inputs.IDRIS2_TAG }}
  BASE_IMAGE: 'ubuntu:${{ inputs.UBUNTU_VERSION }}'
  BASE: 'ubuntu-${{ inputs.UBUNTU_VERSION }}'
  # github.repository_owner = The repository owner's name
  IMAGE_NAME_PREFIX: ${{ github.repository_owner }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # # Install the cosign tool except on PR
      # # https://github.com/sigstore/cosign-installer
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
      #   with:
      #     cosign-release: 'v1.9.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PACKAGE_TOKEN }}

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   # with:
      #   #   images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image idris2-base
        id: build-and-push-idris2-base
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: idris2-base
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME_PREFIX }}/idris2-base:${{ env.BASE }}
          # labels: ${{ steps.meta.outputs.labels }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image idris2
        id: build-and-push-idris2
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: idris2
          build-args: |
            BASE=${{ env.BASE }}
            IDRIS2_TAG=${{ env.IDRIS2_TAG }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME_PREFIX }}/idris2:${{ env.IDRIS2_TAG }}-${{ env.BASE }}
          # labels: ${{ steps.meta.outputs.labels }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image idris2-devcontainer
        id: build-and-push-idris2-devcontainer
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: idris2-devcontainer
          build-args: |
            BASE=${{ env.BASE }}
            IDRIS2_TAG=${{ env.IDRIS2_TAG }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME_PREFIX }}/idris2-devcontainer:${{ env.IDRIS2_TAG }}-${{ env.BASE }}
          # labels: ${{ steps.meta.outputs.labels }}

      # # Sign the resulting Docker image digest except on PRs.
      # # This will only write to the public Rekor transparency log when the Docker
      # # repository is public to avoid leaking data.  If you would like to publish
      # # transparency data even for private images, pass --force to cosign below.
      # # https://github.com/sigstore/cosign
      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     COSIGN_EXPERIMENTAL: "true"
      #   # This step uses the identity token to provision an ephemeral certificate
      #   # against the sigstore community Fulcio instance.
      #   run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
